// Code generated by "stringer -type Token -output=token_string.go token.go"; DO NOT EDIT.

package compiler

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UNKNOWN-0]
	_ = x[DELIMITER-1]
	_ = x[OPERATOR-2]
	_ = x[NUMBER-3]
	_ = x[IDENTIFIER-4]
	_ = x[NEWLINE-5]
	_ = x[LITERAL-6]
	_ = x[COMMENT-7]
	_ = x[KEYWORD-8]
	_ = x[TYPENAME-9]
	_ = x[EXTEND-10]
	_ = x[LPAREN-256]
	_ = x[RPAREN-257]
	_ = x[COMMA-258]
	_ = x[DOT-259]
	_ = x[COLON-260]
	_ = x[EQ-261]
	_ = x[LBRACK-262]
	_ = x[RBRACK-263]
	_ = x[LBRACE-264]
	_ = x[RBRACE-265]
	_ = x[Not-512]
	_ = x[Mul-513]
	_ = x[Add-514]
	_ = x[Sub-515]
	_ = x[Quo-516]
	_ = x[MOD-517]
	_ = x[Less-518]
	_ = x[Great-519]
	_ = x[Assign-520]
	_ = x[NotEq-521]
	_ = x[And-522]
	_ = x[LessEq-523]
	_ = x[EqEq-524]
	_ = x[GrEq-525]
	_ = x[Or-526]
	_ = x[BitAnd-527]
	_ = x[BitOr-528]
	_ = x[BitXor-529]
	_ = x[LSHIFT-530]
	_ = x[RSHIFT-531]
	_ = x[AddEq-532]
	_ = x[SubEq-533]
	_ = x[MulEq-534]
	_ = x[DivEq-535]
	_ = x[ModEq-536]
	_ = x[LshEq-537]
	_ = x[RshEq-538]
	_ = x[AndEq-539]
	_ = x[OrEq-540]
	_ = x[XorEq-541]
	_ = x[Inc-542]
	_ = x[Dec-543]
	_ = x[CONTRACT-2048]
	_ = x[FUNC-2049]
	_ = x[RETURN-2050]
	_ = x[IF-2051]
	_ = x[ELIF-2052]
	_ = x[ELSE-2053]
	_ = x[WHILE-2054]
	_ = x[TRUE-2055]
	_ = x[FALSE-2056]
	_ = x[VAR-2057]
	_ = x[FIELD-2058]
	_ = x[SETTINGS-2059]
	_ = x[BREAK-2060]
	_ = x[CONTINUE-2061]
	_ = x[ERRWARNING-2062]
	_ = x[ERRINFO-2063]
	_ = x[NIL-2064]
	_ = x[ACTION-2065]
	_ = x[CONDITIONS-2066]
	_ = x[TAIL-2067]
	_ = x[ERROR-2068]
	_ = x[BOOL-2304]
	_ = x[BYTES-2305]
	_ = x[INT-2306]
	_ = x[ADDRESS-2307]
	_ = x[ARRAY-2308]
	_ = x[MAP-2309]
	_ = x[MONEY-2310]
	_ = x[FLOAT-2311]
	_ = x[STRING-2312]
	_ = x[FILE-2313]
}

const (
	_Token_name_0 = "UNKNOWNDELIMITEROPERATORNUMBERIDENTIFIERNEWLINELITERALCOMMENTKEYWORDTYPENAMEEXTEND"
	_Token_name_1 = "LPARENRPARENCOMMADOTCOLONEQLBRACKRBRACKLBRACERBRACE"
	_Token_name_2 = "NotMulAddSubQuoMODLessGreatAssignNotEqAndLessEqEqEqGrEqOrBitAndBitOrBitXorLSHIFTRSHIFTAddEqSubEqMulEqDivEqModEqLshEqRshEqAndEqOrEqXorEqIncDec"
	_Token_name_3 = "CONTRACTFUNCRETURNIFELIFELSEWHILETRUEFALSEVARFIELDSETTINGSBREAKCONTINUEERRWARNINGERRINFONILACTIONCONDITIONSTAILERROR"
	_Token_name_4 = "BOOLBYTESINTADDRESSARRAYMAPMONEYFLOATSTRINGFILE"
)

var (
	_Token_index_0 = [...]uint8{0, 7, 16, 24, 30, 40, 47, 54, 61, 68, 76, 82}
	_Token_index_1 = [...]uint8{0, 6, 12, 17, 20, 25, 27, 33, 39, 45, 51}
	_Token_index_2 = [...]uint8{0, 3, 6, 9, 12, 15, 18, 22, 27, 33, 38, 41, 47, 51, 55, 57, 63, 68, 74, 80, 86, 91, 96, 101, 106, 111, 116, 121, 126, 130, 135, 138, 141}
	_Token_index_3 = [...]uint8{0, 8, 12, 18, 20, 24, 28, 33, 37, 42, 45, 50, 58, 63, 71, 81, 88, 91, 97, 107, 111, 116}
	_Token_index_4 = [...]uint8{0, 4, 9, 12, 19, 24, 27, 32, 37, 43, 47}
)

func (i Token) String() string {
	switch {
	case i <= 10:
		return _Token_name_0[_Token_index_0[i]:_Token_index_0[i+1]]
	case 256 <= i && i <= 265:
		i -= 256
		return _Token_name_1[_Token_index_1[i]:_Token_index_1[i+1]]
	case 512 <= i && i <= 543:
		i -= 512
		return _Token_name_2[_Token_index_2[i]:_Token_index_2[i+1]]
	case 2048 <= i && i <= 2068:
		i -= 2048
		return _Token_name_3[_Token_index_3[i]:_Token_index_3[i+1]]
	case 2304 <= i && i <= 2313:
		i -= 2304
		return _Token_name_4[_Token_index_4[i]:_Token_index_4[i+1]]
	default:
		return "Token(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
